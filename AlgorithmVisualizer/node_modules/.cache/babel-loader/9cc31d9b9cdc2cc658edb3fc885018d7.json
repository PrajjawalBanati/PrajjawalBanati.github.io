{"ast":null,"code":"var _jsxFileName = \"/home/prajjawal-banati/COLLEGE/SEM VII/interactive-algorithm-visualizer/src/SearchingVisualizer/SearchingVisualizer.jsx\";\nimport React from 'react'; // Change this value for the speed of the animations.\n\nimport './styles.css';\nconst ANIMATION_SPEED_MS = 1; // Change this value for the number of bars (value) in the array.\n\nconst NUMBER_OF_ARRAY_BARS = 310; // This is the main color of the array bars.\n\nconst PRIMARY_COLOR = 'orange'; // This is the color of array bars that are being compared throughout the animations.\n\nconst SECONDARY_COLOR = 'black';\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n\n    array.sort((a, b) => a - b);\n    this.setState({\n      array\n    });\n  }\n\n  LinearSearch() {\n    let element = document.getElementById(\"search-element\");\n    console.log(element);\n  }\n\n  BinarySearch() {}\n\n  JumpSearch() {}\n\n  ExponentialSearch() {}\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Searching Visualizer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"element-input\",\n      id: \"search-element\",\n      placeholder: \"Enter element to Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \" Generate an Array \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.LinearSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \" Linear Search \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.BubbleSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \" Binary Search \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.InsertionSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \" Exponential Search \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.MergeSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \" Jump Search \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, array.map((value, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-bar-2\",\n      key: idx,\n      style: {\n        backgroundColor: PRIMARY_COLOR\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, value))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/home/prajjawal-banati/COLLEGE/SEM VII/interactive-algorithm-visualizer/src/SearchingVisualizer/SearchingVisualizer.jsx"],"names":["React","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","sort","a","b","setState","LinearSearch","element","document","getElementById","console","log","BinarySearch","JumpSearch","ExponentialSearch","render","BubbleSort","InsertionSort","MergeSort","map","value","idx","backgroundColor","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\n// Change this value for the speed of the animations.\nimport './styles.css';\nconst ANIMATION_SPEED_MS = 1;\n\n// Change this value for the number of bars (value) in the array.\nconst NUMBER_OF_ARRAY_BARS = 310;\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'orange';\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'black';\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props){\n        super (props);\n        this.state = {\n            array: [],\n        };\n    }\n    componentDidMount(){\n        this.resetArray();\n    }\n    resetArray(){\n        const array = [];\n        for(let i=0;i<NUMBER_OF_ARRAY_BARS;i++)\n        {\n            array.push(randomIntFromInterval(5,730));\n        }\n        array.sort((a,b)=>a - b);\n        this.setState({array});\n    }\n    LinearSearch()\n    {\n        let element=document.getElementById(\"search-element\");\n        console.log(element);\n    }\n    BinarySearch()\n    {\n        \n    }\n    JumpSearch()\n    {\n        \n    }\n    ExponentialSearch()\n    {\n        \n    }\n\n    render(){\n        const {array} = this.state;\n        return (<div>\n        <div className = \"App-header-2\">\n        <div className = \"heading\">\n        <h2>Searching Visualizer</h2>\n        </div>\n        <div className = \"button\"> <input className=\"element-input\" id=\"search-element\" placeholder=\"Enter element to Search\"></input></div>\n        <div className = \"button\" onClick={() => this.resetArray()}> Generate an Array </div>\n        <div className = \"button\" onClick={() => this.LinearSearch()}> Linear Search </div>\n        <div className = \"button\" onClick={() => this.BubbleSort()}> Binary Search </div>\n        <div className = \"button\" onClick={() => this.InsertionSort()}> Exponential Search </div>\n        <div className = \"button\" onClick={() => this.MergeSort()}> Jump Search </div>\n        </div>\n        <div className =\"array-container-2\">\n            {array.map((value,idx) => (\n                <div\n                className = \"array-bar-2\"\n                key = {idx}\n                style = {{\n                    backgroundColor:PRIMARY_COLOR,\n                }}>\n                    {value}\n                </div>\n            ))\n            }\n        </div>\n        <div className=\"footer-2\">\n      </div>\n        </div>);\n    }\n}\nfunction randomIntFromInterval(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }"]},"metadata":{},"sourceType":"module"}