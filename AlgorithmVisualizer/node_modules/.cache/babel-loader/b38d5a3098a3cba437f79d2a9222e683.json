{"ast":null,"code":"export function getbubblesortanimation(array) {\n  let animation = [];\n  let auxillaryarray = array.slice();\n  bubblesort(auxillaryarray, animation);\n  array = auxillaryarray;\n  return [animation, array];\n}\n\nfunction bubblesort(auxillaryarray, animation) {\n  const length = auxillaryarray.length;\n  let iterator = length - 1;\n\n  while (iterator > 0) {\n    let swapped = false;\n\n    for (let i = 0; i < iterator; i++) {\n      animation.push([\"comparison1\", i, i + 1]);\n      animation.push([\"comparison2\", i, i + 1]);\n\n      if (auxillaryarray[i] > auxillaryarray[i + 1]) {\n        swapped = true;\n        animation.push([\"swap\", i, auxillaryarray[i + 1]]);\n        animation.push([\"swap\", i + 1, auxillaryarray[i]]);\n        let temp = auxillaryarray[i + 1];\n        auxillaryarray[i + 1] = auxillaryarray[i];\n        auxillaryarray[i] = temp;\n      }\n    }\n\n    if (swapped === false) {\n      break;\n    }\n\n    iterator--;\n  }\n}","map":{"version":3,"sources":["/home/prajjawal-banati/COLLEGE/SEM VII/interactive-algorithm-visualizer/src/sortingAlgorithms/BubbleSort.js"],"names":["getbubblesortanimation","array","animation","auxillaryarray","slice","bubblesort","length","iterator","swapped","i","push","temp"],"mappings":"AAAA,OAAO,SAASA,sBAAT,CAAgCC,KAAhC,EACP;AACI,MAAIC,SAAS,GAAC,EAAd;AACA,MAAIC,cAAc,GAACF,KAAK,CAACG,KAAN,EAAnB;AACAC,EAAAA,UAAU,CAACF,cAAD,EAAgBD,SAAhB,CAAV;AACAD,EAAAA,KAAK,GAACE,cAAN;AACA,SAAO,CAACD,SAAD,EAAWD,KAAX,CAAP;AACH;;AACD,SAASI,UAAT,CAAoBF,cAApB,EAAmCD,SAAnC,EACA;AACI,QAAMI,MAAM,GAACH,cAAc,CAACG,MAA5B;AACA,MAAIC,QAAQ,GAACD,MAAM,GAAC,CAApB;;AACA,SAAMC,QAAQ,GAAC,CAAf,EACA;AACI,QAAIC,OAAO,GAAC,KAAZ;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,QAAd,EAAuBE,CAAC,EAAxB,EACA;AACIP,MAAAA,SAAS,CAACQ,IAAV,CAAe,CAAC,aAAD,EAAeD,CAAf,EAAiBA,CAAC,GAAC,CAAnB,CAAf;AACAP,MAAAA,SAAS,CAACQ,IAAV,CAAe,CAAC,aAAD,EAAeD,CAAf,EAAiBA,CAAC,GAAC,CAAnB,CAAf;;AACA,UAAGN,cAAc,CAACM,CAAD,CAAd,GAAkBN,cAAc,CAACM,CAAC,GAAC,CAAH,CAAnC,EACA;AACID,QAAAA,OAAO,GAAG,IAAV;AACAN,QAAAA,SAAS,CAACQ,IAAV,CAAe,CAAC,MAAD,EAAQD,CAAR,EAAUN,cAAc,CAACM,CAAC,GAAC,CAAH,CAAxB,CAAf;AACAP,QAAAA,SAAS,CAACQ,IAAV,CAAe,CAAC,MAAD,EAAQD,CAAC,GAAC,CAAV,EAAYN,cAAc,CAACM,CAAD,CAA1B,CAAf;AACA,YAAIE,IAAI,GAACR,cAAc,CAACM,CAAC,GAAC,CAAH,CAAvB;AACAN,QAAAA,cAAc,CAACM,CAAC,GAAC,CAAH,CAAd,GAAoBN,cAAc,CAACM,CAAD,CAAlC;AACAN,QAAAA,cAAc,CAACM,CAAD,CAAd,GAAkBE,IAAlB;AACH;AACJ;;AACD,QAAGH,OAAO,KAAG,KAAb,EACA;AACI;AACH;;AACDD,IAAAA,QAAQ;AACX;AACJ","sourcesContent":["export function getbubblesortanimation(array)\n{\n    let animation=[];\n    let auxillaryarray=array.slice();\n    bubblesort(auxillaryarray,animation);\n    array=auxillaryarray;\n    return [animation,array];\n}\nfunction bubblesort(auxillaryarray,animation)\n{\n    const length=auxillaryarray.length;\n    let iterator=length-1;\n    while(iterator>0)\n    {\n        let swapped=false;\n        for(let i=0;i<iterator;i++)\n        {\n            animation.push([\"comparison1\",i,i+1]);\n            animation.push([\"comparison2\",i,i+1]);\n            if(auxillaryarray[i]>auxillaryarray[i+1])\n            {\n                swapped = true;\n                animation.push([\"swap\",i,auxillaryarray[i+1]]);\n                animation.push([\"swap\",i+1,auxillaryarray[i]]);\n                let temp=auxillaryarray[i+1];\n                auxillaryarray[i+1]=auxillaryarray[i];\n                auxillaryarray[i]=temp;\n            }\n        }\n        if(swapped===false) \n        {\n            break;\n        }\n        iterator--;\n    }\n}"]},"metadata":{},"sourceType":"module"}