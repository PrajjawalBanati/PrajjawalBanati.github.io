{"ast":null,"code":"var _jsxFileName = \"/home/prajjawal-banati/COLLEGE/SEM VII/interactive-algorithm-visualizer/src/SearchingVisualizer/SearchingVisualizer.jsx\";\nimport React from 'react';\nimport './styles.css';\nimport { getLinearSearchAnimations } from '../searchingAlgorithms/LinearSearch';\nimport { getBinarySearchAnimations } from '../searchingAlgorithms/BinarySearch'; // Change this value for the speed of the animations.\n\nconst ANIMATION_SPEED_MS = 100; // Change this value for the number of bars (value) in the array.\n\nconst NUMBER_OF_ARRAY_BARS = 310; // This is the main color of the array bars.\n\nconst PRIMARY_COLOR = 'orange'; // This is the color of array bars that are being compared throughout the animations.\n\nconst SECONDARY_COLOR = 'red';\nconst FOUND_COLOR = 'green';\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n\n    array.sort((a, b) => a - b);\n    this.setState({\n      array\n    });\n  }\n\n  LinearSearch() {\n    if (this.state.value.length > 0) {\n      let element = parseInt(this.state.value);\n      const animations = getLinearSearchAnimations(this.state.array, element);\n\n      for (let i = 0; i < animations.length; i++) {\n        const iscolorchange = animations[i][0] === \"iteration1\" || animations[i][0] === \"iteration2\";\n        const arrayboxes = document.getElementsByClassName('array-bar-2');\n\n        if (iscolorchange === true) {\n          const color = animations[i][0] === \"iteration1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n          const barindex = animations[i][1];\n          const FirstBarStyle = arrayboxes[barindex].style;\n          setTimeout(() => {\n            FirstBarStyle.backgroundColor = color;\n          }, i * ANIMATION_SPEED_MS);\n        } else if (animations[i][0] === \"found\") {\n          const barFoundIndex = animations[i][1];\n          const barstyle = arrayboxes[barFoundIndex].style;\n          setTimeout(() => {\n            barstyle.backgroundColor = FOUND_COLOR;\n          }, i * ANIMATION_SPEED_MS);\n        } else {\n          setTimeout(() => {\n            alert(\"Element Not Found\");\n          }, i * ANIMATION_SPEED_MS);\n        }\n      }\n    } else {\n      alert(\"Enter the number to search\");\n    }\n  }\n\n  BinarySearch() {\n    if (this.state.value > 0) {\n      let element = parseInt(this.state.value);\n      const animations = getBinarySearchAnimations(this.state.array, element);\n\n      for (let i = 0; i < animations.length; i++) {\n        const iscolorchange = animations[i][0] === \"iteration1\" || animations[i][0] === \"iteration2\";\n        const arrayboxes = document.getElementsByClassName('array-bar-2');\n\n        if (iscolorchange === true) {\n          const color = animations[i][0] === \"iteration1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n          const onebarindex = animations[i][1];\n          const secondbarindex = animations[i][2];\n          const FirstBarStyle = arrayboxes[onebarindex].style;\n          const SecondBarStyle = arrayboxes[secondbarindex].style;\n          setTimeout(() => {\n            FirstBarStyle.backgroundColor = color;\n            SecondBarStyle.backgroundColor = color;\n          }, i * ANIMATION_SPEED_MS);\n        } else if (animations[i][0] === \"found\") {\n          const barFoundIndex = animations[i][1];\n          const barstyle = arrayboxes[barFoundIndex].style;\n          setTimeout(() => {\n            barstyle.backgroundColor = FOUND_COLOR;\n          }, i * ANIMATION_SPEED_MS);\n        } else {\n          setTimeout(() => {\n            alert(\"Element Not Found\");\n          }, i * ANIMATION_SPEED_MS);\n        }\n      }\n    } else {\n      alert(\"Enter the number to search\");\n    }\n  }\n\n  JumpSearch() {\n    let element = parseInt(this.state.value);\n  }\n\n  ExponentialSearch() {\n    let element = parseInt(this.state.value);\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, \"Searching Visualizer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"element-input\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      placeholder: \"Enter the number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \" Generate an Array \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.LinearSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \" Linear Search \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: () => this.BinarySearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \" Binary Search \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, array.map((value, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-bar-2\",\n      key: idx,\n      style: {\n        backgroundColor: PRIMARY_COLOR\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, value))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/home/prajjawal-banati/COLLEGE/SEM VII/interactive-algorithm-visualizer/src/SearchingVisualizer/SearchingVisualizer.jsx"],"names":["React","getLinearSearchAnimations","getBinarySearchAnimations","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","SECONDARY_COLOR","FOUND_COLOR","SortingVisualizer","Component","constructor","props","state","array","value","handleChange","bind","componentDidMount","resetArray","event","setState","target","i","push","randomIntFromInterval","sort","a","b","LinearSearch","length","element","parseInt","animations","iscolorchange","arrayboxes","document","getElementsByClassName","color","barindex","FirstBarStyle","style","setTimeout","backgroundColor","barFoundIndex","barstyle","alert","BinarySearch","onebarindex","secondbarindex","SecondBarStyle","JumpSearch","ExponentialSearch","render","map","idx","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles.css';\nimport { getLinearSearchAnimations } from '../searchingAlgorithms/LinearSearch';\nimport { getBinarySearchAnimations } from '../searchingAlgorithms/BinarySearch';\n// Change this value for the speed of the animations.\nconst ANIMATION_SPEED_MS = 100;\n\n// Change this value for the number of bars (value) in the array.\nconst NUMBER_OF_ARRAY_BARS = 310;\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'orange';\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'red';\n\nconst FOUND_COLOR = 'green'\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props){\n        super (props);\n        this.state = {\n            array: [],\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    componentDidMount(){\n        this.resetArray();\n    }\n    handleChange(event)\n    {\n        this.setState({value: event.target.value});\n    }\n    resetArray(){\n        const array = [];\n        for(let i=0;i<NUMBER_OF_ARRAY_BARS;i++)\n        {\n            array.push(randomIntFromInterval(5,730));\n        }\n        array.sort((a,b)=>a - b);\n        this.setState({array});\n    }\n    LinearSearch()\n    {\n        if(this.state.value.length>0)\n        {\n            let element=parseInt(this.state.value);\n            const animations=getLinearSearchAnimations(this.state.array,element);\n            for(let i=0;i<animations.length;i++)\n            {\n                const iscolorchange = animations[i][0] === \"iteration1\" || animations[i][0] === \"iteration2\";\n                const arrayboxes = document.getElementsByClassName('array-bar-2');\n                if(iscolorchange===true)\n                {\n                    const color = (animations[i][0] === \"iteration1\") ? SECONDARY_COLOR:PRIMARY_COLOR;\n                    const barindex=animations[i][1];\n                    const FirstBarStyle=arrayboxes[barindex].style;\n                    setTimeout(()=>{\n                        FirstBarStyle.backgroundColor=color;\n                    },i*ANIMATION_SPEED_MS);\n                }\n                else if(animations[i][0]===\"found\") {\n                    const barFoundIndex=animations[i][1];\n                    const barstyle=arrayboxes[barFoundIndex].style;\n                    setTimeout(()=>{\n                        barstyle.backgroundColor=FOUND_COLOR;\n                    },i*ANIMATION_SPEED_MS);\n                }\n                else {\n                    setTimeout(()=>{\n                        alert(\"Element Not Found\");\n                    },i*ANIMATION_SPEED_MS);\n                }\n            }\n        }\n        else{\n            alert(\"Enter the number to search\");\n        }\n        \n    }\n    BinarySearch()\n    {\n        if(this.state.value>0)\n        {\n            let element=parseInt(this.state.value);\n            const animations=getBinarySearchAnimations(this.state.array,element);\n            for(let i=0;i<animations.length;i++)\n            {\n                const iscolorchange = animations[i][0] === \"iteration1\" || animations[i][0] === \"iteration2\";\n                const arrayboxes = document.getElementsByClassName('array-bar-2');\n                if(iscolorchange===true)\n                {\n                    const color = (animations[i][0] === \"iteration1\") ? SECONDARY_COLOR:PRIMARY_COLOR;\n                    const onebarindex=animations[i][1];\n                    const secondbarindex=animations[i][2];\n                    const FirstBarStyle=arrayboxes[onebarindex].style;\n                    const SecondBarStyle=arrayboxes[secondbarindex].style;\n                    setTimeout(()=>{\n                        FirstBarStyle.backgroundColor=color;\n                        SecondBarStyle.backgroundColor=color;\n                    },i*ANIMATION_SPEED_MS);\n                }\n                else if(animations[i][0]===\"found\")\n                {\n                    const barFoundIndex=animations[i][1];\n                    const barstyle=arrayboxes[barFoundIndex].style;\n                    setTimeout(()=>{\n                        barstyle.backgroundColor=FOUND_COLOR;\n                    },i*ANIMATION_SPEED_MS);\n                }\n                else{\n                    setTimeout(()=>{\n                        alert(\"Element Not Found\");\n                    },i*ANIMATION_SPEED_MS);\n                }\n            }\n        } \n        else{\n            alert(\"Enter the number to search\");\n        }       \n    }\n    JumpSearch()\n    {\n        let element=parseInt(this.state.value);\n        \n    }\n    ExponentialSearch()\n    {\n        let element = parseInt(this.state.value);\n        \n    }\n\n    render(){\n        const {array} = this.state;\n        return (<div>\n        <div className = \"App-header-2\">\n        <div className = \"heading\">\n        <h2>Searching Visualizer</h2>\n        </div>\n        <div className = \"input-number\"> <input type=\"text\" className=\"element-input\" value={this.state.value} onChange={this.handleChange} placeholder=\"Enter the number\"></input></div>\n        <div className = \"button\" onClick={() => this.resetArray()}> Generate an Array </div>\n        <div className = \"button\" onClick={() => this.LinearSearch()}> Linear Search </div>\n        <div className = \"button\" onClick={() => this.BinarySearch()}> Binary Search </div>\n        </div>\n        <div className =\"array-container-2\">\n            {array.map((value,idx) => (\n                <div\n                className = \"array-bar-2\"\n                key = {idx}\n                style = {{\n                    backgroundColor:PRIMARY_COLOR,\n                }}>\n                    {value}\n                </div>\n            ))\n            }\n        </div>\n        <div className=\"footer-2\">\n      </div>\n        </div>);\n    }\n}\nfunction randomIntFromInterval(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }"]},"metadata":{},"sourceType":"module"}