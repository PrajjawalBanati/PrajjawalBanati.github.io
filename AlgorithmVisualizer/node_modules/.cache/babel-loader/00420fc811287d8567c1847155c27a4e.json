{"ast":null,"code":"export function getInsertionSortAnimation(array) {\n  let animations = [];\n  let auxilliaryarray = [];\n  auxilliaryarray = array.slice();\n  InsertionSort(auxilliaryarray, animations);\n  array = auxilliaryarray;\n  return [array, animations];\n}\n\nfunction InsertionSort(auxilliaryarray, animations) {\n  for (let i = 1; i < auxilliaryarray.length; i++) {\n    let key = auxilliaryarray[i];\n    let j = i - 1;\n    animations.push([\"comparison1\", i, j]);\n    animations.push([\"comparison2\", i, j]);\n\n    while (j >= 0 && auxilliaryarray[j] > key) {\n      animations.push([\"comparison1\", i, j]);\n      animations.push([\"comparison2\", i, j]);\n      auxilliaryarray[j + 1] = auxilliaryarray[j];\n      animations.push([\"swap\", j + 1, auxilliaryarray[j]]);\n      j--;\n    }\n\n    animations.push([\"swap\", j + 1, key]);\n    auxilliaryarray[j + 1] = key;\n  }\n}","map":{"version":3,"sources":["/home/prajjawal-banati/COLLEGE/SEM VII/interactive-algorithm-visualizer/src/sortingAlgorithms/InsertionSort.js"],"names":["getInsertionSortAnimation","array","animations","auxilliaryarray","slice","InsertionSort","i","length","key","j","push"],"mappings":"AAAA,OAAO,SAASA,yBAAT,CAAmCC,KAAnC,EACP;AACI,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,eAAe,GAAC,EAApB;AACAA,EAAAA,eAAe,GAACF,KAAK,CAACG,KAAN,EAAhB;AACAC,EAAAA,aAAa,CAACF,eAAD,EAAiBD,UAAjB,CAAb;AACAD,EAAAA,KAAK,GAACE,eAAN;AACA,SAAO,CAACF,KAAD,EAAOC,UAAP,CAAP;AACH;;AACD,SAASG,aAAT,CAAuBF,eAAvB,EAAuCD,UAAvC,EACA;AACI,OAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,eAAe,CAACI,MAA9B,EAAqCD,CAAC,EAAtC,EACA;AACI,QAAIE,GAAG,GAACL,eAAe,CAACG,CAAD,CAAvB;AACA,QAAIG,CAAC,GAACH,CAAC,GAAC,CAAR;AACAJ,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,aAAD,EAAeJ,CAAf,EAAiBG,CAAjB,CAAhB;AACAP,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,aAAD,EAAeJ,CAAf,EAAiBG,CAAjB,CAAhB;;AACA,WAAMA,CAAC,IAAE,CAAH,IAAQN,eAAe,CAACM,CAAD,CAAf,GAAmBD,GAAjC,EACA;AACIN,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,aAAD,EAAeJ,CAAf,EAAiBG,CAAjB,CAAhB;AACAP,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,aAAD,EAAeJ,CAAf,EAAkBG,CAAlB,CAAhB;AACAN,MAAAA,eAAe,CAACM,CAAC,GAAC,CAAH,CAAf,GAAqBN,eAAe,CAACM,CAAD,CAApC;AACAP,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,MAAD,EAAQD,CAAC,GAAC,CAAV,EAAYN,eAAe,CAACM,CAAD,CAA3B,CAAhB;AACAA,MAAAA,CAAC;AACJ;;AACDP,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,MAAD,EAAQD,CAAC,GAAC,CAAV,EAAYD,GAAZ,CAAhB;AACAL,IAAAA,eAAe,CAACM,CAAC,GAAC,CAAH,CAAf,GAAqBD,GAArB;AACH;AACJ","sourcesContent":["export function getInsertionSortAnimation(array)\n{\n    let animations=[];\n    let auxilliaryarray=[];\n    auxilliaryarray=array.slice();\n    InsertionSort(auxilliaryarray,animations);\n    array=auxilliaryarray;\n    return [array,animations];\n}\nfunction InsertionSort(auxilliaryarray,animations)\n{\n    for(let i=1;i<auxilliaryarray.length;i++)\n    {\n        let key=auxilliaryarray[i];\n        let j=i-1;\n        animations.push([\"comparison1\",i,j]);\n        animations.push([\"comparison2\",i,j]);\n        while(j>=0 && auxilliaryarray[j]>key)\n        {\n            animations.push([\"comparison1\",i,j]);\n            animations.push([\"comparison2\",i, j]);\n            auxilliaryarray[j+1]=auxilliaryarray[j];\n            animations.push([\"swap\",j+1,auxilliaryarray[j]]);\n            j--;\n        }\n        animations.push([\"swap\",j+1,key]);\n        auxilliaryarray[j+1]=key;\n    }\n}"]},"metadata":{},"sourceType":"module"}